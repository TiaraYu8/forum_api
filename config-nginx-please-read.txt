server {
    listen 80;
    server_name www.bright-cats-share-quickly.a277.dcdg.xyz bright-cats-share-quickly.a276.dcdg.xyz;

    # Redirect HTTP ke HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name www.bright-cats-share-quickly.a276.dcdg.xyz bright-cats-share-quickly.a276.dcdg.xyz;

       ssl_certificate /etc/letsencrypt/live/bright-cats-share-quickly.a276.dcdg.xyz/fullchain.pem;
       ssl_certificate_key /etc/letsencrypt/live/bright-cats-share-quickly.a276.dcdg.xyz/privkey.pem;






    location /threads {
        limit_req zone=threads_limit burst=10 nodelay;
        add_header X-RateLimit-Limit "90 requests per minute" always;
        add_header X-RateLimit-Remaining $limit_req_status always;
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    location / {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    error_page 503 @rate_limit_error;
    location @rate_limit_error {
        add_header Content-Type application/json always;
        return 503 '{"status":"fail","message":"Rate limit exceeded. Maximum 90 requests per minute allowed for /threads endpoints."}';
    }
}