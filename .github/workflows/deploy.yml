name: Deploy Forum API to AWS EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/forum-api
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USER: ${{ secrets.EC2_USER }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: forum_api_test
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug Docker secrets
      run: |
        echo "DOCKER_USER=${DOCKER_USERNAME}" >> $GITHUB_ENV
        echo "DOCKER_PASS=${DOCKER_TOKEN}" >> $GITHUB_ENV
        echo "Docker username length: ${#DOCKER_USERNAME}"
        echo "Docker token length: ${#DOCKER_TOKEN}"
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run database migrations
      run: npm run migrate:test up
      env:
        PGHOST: localhost
        PGPORT: 5432
        PGDATABASE: forum_api_test
        PGUSER: postgres
        PGPASSWORD: password

    - name: Run tests
      run: npm test
      env:
        PGHOST: localhost
        PGPORT: 5432
        PGDATABASE: forum_api_test
        PGUSER: postgres
        PGPASSWORD: password
        ACCESS_TOKEN_KEY: test-access-token-key
        REFRESH_TOKEN_KEY: test-refresh-token-key
        ACCESS_TOKEN_AGE: 3000

  build-and-deploy:
    environment: forum_api_project
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug deployment secrets
      run: |
        echo "EC2_HOST length: ${#EC2_HOST}"
        echo "EC2_USER length: ${#EC2_USER}"
        echo "Docker image: $DOCKER_IMAGE"
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:latest
          ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
          cd /home/${{ secrets.EC2_USER }}/forum-api
          git pull origin main
          npm install --production
          npm run migrate
          pm2 restart forum-api || pm2 start src/app.js --name forum-api
          pm2 save
